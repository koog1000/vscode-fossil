// SYNTAX TEST "source.pikchr" "first test"

box
// <--- storage.type.class.pikchr
box
// <--- storage.type.class.pikchr
\
// <- punctuation.separator.continuation.line.pikchr
cylinder  ;
// <--------  storage.type.class.pikchr
//      ^  source.pikchr
cylinder;
// <--- storage.type.class.pikchr
//      ^ source.pikchr punctuation.separator.delimiter.end.pikchr
cylinder;box
// <--- storage.type.class.pikchr
//      ^ source.pikchr punctuation.separator.delimiter.end.pikchr
//       ^ storage.type.class.pikchr


cylinder  ;  box
// <--- storage.type.class.pikchr
//      ^ source.pikchr
//        ^ source.pikchr punctuation.separator.delimiter.end.pikchr
//         ^ source.pikchr
//           ^ storage.type.class.pikchr

arrow right
// <--- storage.type.class.pikchr
//   ^ -storage.type.class.pikchr
//    ^^^^^ support.constant.edge.pikchr

diamond "hi"
// <--- storage.type.class.pikchr
//      ^^^^ string.quoted.double.pikchr


Cat: box "box"
// <--- variable.language.place.pikchr
// ^ punctuation.separator.pikchr
//   ^^^ storage.type.class.pikchr
//       ^^^^^ string.quoted.double.pikchr
   Cat : box "box"
// ^^^ variable.language.place.pikchr
//     ^ punctuation.separator.pikchr
//       ^^^ storage.type.class.pikchr
//           ^^^^^ string.quoted.double.pikchr

box "hello, \"world\""
//  ^^^^^^^^^^^^^^^^^^ string.quoted.double.pikchr
box "hello, \x";;;;
//  ^^^^^^^^^^^ source.pikchr string.quoted.double.pikchr
//             ^^^^ punctuation.separator.delimiter.end.pikchr
linewid = 0.25
// <--- variable.language.pikchr
//      ^ keyword.operator.assignment.pikchr
//        ^^^^ constant.numeric.pikchr
$r = 0.2in ;  _a=0; @b=-1
// <--        ^^    ^^ variable.language.pikchr
// ^            ^     ^  keyword.operator.assignment.pikchr
//   ^^^^^       ^      ^ constant.numeric.pikchr
//      ^^ keyword.other.unit.in.pikchr
//         ^      ^ punctuation.separator.delimiter.end.pikchr
//                     ^ keyword.operator.arithmetic.pikchr

linerad = 0.75*$r
// <------- variable.language.pikchr
//     ^ -variable.language.pikchr
//      ^ keyword.operator.assignment.pikchr
//        ^^^^ constant.numeric.pikchr
//            ^ keyword.operator.arithmetic.pikchr
//             ^^ variable.language.pikchr

boxht = .2; boxwid = .3; circlerad = .3; dx = 0.05
// <----- variable.language.pikchr
//          ^^^^^^       ^^^^^^^^^       ^^ variable.language.pikchr
//    ^            ^               ^        ^ keyword.operator.assignment.pikchr
//      ^^           ^^              ^^       ^^^^ constant.numeric.pikchr
//        ^            ^               ^ punctuation.separator.delimiter.end.pikchr

left
// <---- support.constant.direction.pikchr
down with the sickness
// <---- support.constant.direction.pikchr
//   ^^^^ ^^^ ^^^^^^^^ invalid.illegal.pikchr

line dashed
//   ^^^^^^ entity.name.tag.pikchr
line dotted
//   ^^^^^^ entity.name.tag.pikchr
box :? 3 ``
//  ^^   ^^ invalid.illegal.pikchr
print .!
//    ^^ invalid.illegal.pikchr
print "t" .!
//    ^^^ string.quoted.double.pikchr
//        ^^ invalid.illegal.pikchr
d = 43 !^
//     ^^ invalid.illegal.pikchr
define par {} !
//            ^ invalid.illegal.pikchr
assert(1==1),
//          ^ invalid.illegal.pikchr

"splines"
// <--------- string.quoted.double.pikchr

box ht $1 wid $1 $2
//  ^^    ^^^ support.constant.property-value.pikchr
//     ^^     ^^ ^^ variable.language.pikchr

print "Oval at: ",previous.x, ",", previous.y
// <----- keyword.control.directive.define.pikchr
//    ^^^^^^^^^^^             ^^^ string.quoted.double.pikchr
//               ^               ^ punctuation.separator.pikchr
//                ^^^^^^^^         ^^^^^^^^ constant.language.pikchr
//                        ^                ^ punctuation.separator.period.pikchr
//                         ^                ^ constant.language.pikchr

circlerad = previous.radius
// <--------- variable.language.pikchr
//        ^^^^^^^^^^^^^^^^^ meta.assignment.pikchr
//        ^ keyword.operator.assignment.pikchr
//          ^^^^^^^^ constant.language.pikchr
//                  ^ punctuation.separator.period.pikchr
//                   ^^^^^^ support.constant.property-value.pikchr
X0: last.e
//> <-- variable.language.pikchr
//>^ punctuation.separator.pikchr
//>  ^^^^ variable.language.pikchr
//>      ^ punctuation.separator.period.pikchr
//>       ^ entity.name.class.pikchr
