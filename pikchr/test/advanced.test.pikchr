// SYNTAX TEST "source.pikchr" "long statements"

line right even with $r left of X9 then up until even with VARIABLE.n
// <---- storage.type.class.pikchr
//   ^^^^^              ^^^^            ^^ support.constant.edge.pikchr
//         ^^^^ ^^^^                       ^^^^^ ^^^^ ^^^^ keyword.pikchr
//                   ^^ variable.language.pikchr
//                           ^^ keyword.control.of.pikchr
//                              ^^ variable.language.pikchr
//                                 ^^^^ keyword.pikchr
//                                                         ^^^^^^^^ variable.language.pikchr

circle rad 0.05 at Paper + (-0.055, -0.25)
// <------ storage.type.class.pikchr
//     ^^^ support.constant.property-value.pikchr
//         ^^^^ constant.numeric.pikchr
//              ^^ keyword.pikchr
//                 ^^^^^ variable.language.pikchr
//                       ^ keyword.operator.arithmetic.pikchr
//                         ^ punctuation.parenthesis.begin.pikchr
//                          ^       ^ keyword.operator.arithmetic.pikchr
//                           ^^^^^   ^^^^ constant.numeric.pikchr
//                                       ^ punctuation.parenthesis.end.pikchr


line thick  right from 0.3cm below start of previous
// <---- storage.type.class.pikchr
//   ^^^^^ entity.name.tag.pikchr
//          ^^^^^ support.constant.edge.pikchr
//                ^^^^ keyword.pikchr
//                     ^^^^^ constant.numeric.pikchr
//                        ^^ keyword.other.unit.cm.pikchr
//                           ^^^^^ keyword.pikchr
//                                 ^^^^^ support.constant.edge.pikchr
//                                       ^^ keyword.control.of.pikchr
//                                          ^^^^^^^^ constant.language.pikchr

oval width OVAL1.height height OVAL1.width
// <---- storage.type.class.pikchr
//   ^^^^^              ^^^^^^ support.constant.property-value.pikchr
//         ^^^^^ variable.language.pikchr
//              ^                   ^ punctuation.separator.period.pikchr
//               ^^^^^^              ^^^^^ support.constant.property-value.pikchr

oval "" fit at $r*1.2 below 1/2 way between X0 and X9
// <---- storage.type.class.pikchr
//   ^^ string.quoted.double.pikchr
//      ^^^ entity.name.tag.pikchr
//         ^ -entity.name.tag.pikchr
//          ^^ keyword.pikchr
//             ^^ variable.language.pikchr
//               ^ keyword.operator.arithmetic.pikchr
//                ^^^       ^ ^ constant.numeric.pikchr
//                    ^^^^^ keyword.pikchr
//                           ^ keyword.operator.arithmetic.pikchr
//                              ^^^ ^^^^^^^ keyword.pikchr
//                                          ^^     ^^ variable.language.pikchr
//                                             ^^^ keyword.pikchr

arrow from TYPENAME.e right even with ATTR
// <----- storage.type.class.pikchr
//    ^^^^ keyword.pikchr
//         ^^^^^^^^                   ^^^^ variable.language.pikchr
//                 ^ punctuation.separator.period.pikchr
//                  ^ constant.language.pikchr
//                    ^^^^^ support.constant.edge.pikchr
//                          ^^^^ ^^^^ keyword.pikchr

box "expr" fit with .w at 1.75*$h below BTW.w
// <--- storage.type.class.pikchr
//  ^^^^^^ string.quoted.double.pikchr
//         ^^^ entity.name.tag.pikchr
//             ^^^^ keyword.pikchr
//                  ^ punctuation.separator.period.pikchr
//                   ^ constant.language.pikchr
//                     ^^ keyword.pikchr
//                        ^^^^ constant.numeric.pikchr
//                            ^ keyword.operator.arithmetic.pikchr
//                             ^^ variable.language.pikchr
//                                ^^^^^ keyword.pikchr
//                                      ^^^ variable.language.pikchr
//                                         ^ punctuation.separator.period.pikchr
//                                          ^ constant.language.pikchr
box (thickness)
// <--- storage.type.class.pikchr
//  ^ punctuation.parenthesis.begin.pikchr
//   ^^^^^^^^^ variable.language.pikchr
//            ^ source.pikchr punctuation.parenthesis.end.pikchr

spline thin color gray <-> \
// <------ storage.type.class.pikchr
//     ^^^^ entity.name.tag.pikchr
//          ^^^^^ support.constant.property-value.pikchr
//                ^^^^ support.constant.color.w3c-standard-color-name.pikchr
//                     ^^^ entity.name.tag.pikchr
//                        ^ source.pikchr
//                         ^ punctuation.separator.continuation.line.pikchr
from d1+8mm heading 0 from C2
// <---- keyword.pikchr
//   ^^ variable.language.pikchr
//     ^ keyword.operator.arithmetic.pikchr
//      ^^^ constant.numeric.pikchr
//       ^^ keyword.other.unit.mm.pikchr
//          ^^^^^^^ keyword.pikchr
//                  ^ constant.numeric.pikchr
//                    ^^^^ keyword.pikchr
//                         ^^ variable.language.pikchr

circle "C3" at dist(C2,C4) heading 30 from C2
//             ^^^^ entity.name.function.pikchr
//                         ^^^^^^^    ^^^^ keyword.pikchr

box height C3.y-C2.y \
//  ^^^^^  support.constant.property-value.pikchr
    width (C5P.e.x-C0.w.x)+linewid \
//  ^^^^^  support.constant.property-value.pikchr
//             ^ ^    ^ ^ constant.language.pikchr
    with .w at 0.5*linewid west of C0.w \
//  ^^^^ keyword.pikchr
//        ^                           ^ constant.language.pikchr
    behind C0 \
//  ^^^^^^ keyword.pikchr
    fill 0xc6e2ff thin color gray
//  ^^^^ support.constant.property-value.pikchr

text "radius" at (6/8<X4.start,X4.end>,1/2<X3,X4> /*comment*/)
// <---- storage.type.class.pikchr
//   ^^^^^^^^ string.quoted.double.pikchr
//            ^^ keyword.pikchr
//               ^ punctuation.parenthesis.begin.pikchr
//                ^ ^                  ^ ^ constant.numeric.pikchr
//                 ^                    ^keyword.operator.arithmetic.pikchr
//                   ^                    ^ punctuation.bracket.angle.begin.pikchr
//                                   ^          ^ punctuation.bracket.angle.end.pikchr
//                                                           ^ punctuation.parenthesis.end.pikchr
//                    ^^       ^^          ^^ ^^ variable.language.pikchr
//                      ^        ^ punctuation.separator.period.pikchr
//                            ^ punctuation.separator.pikchr
//                                                ^^^^^^^^^^^ comment.block.pikchr

"Pikchr source " rjust "code input " rjust at 2nd vertex /**/ of previous
// <----------------   ^^^^^^^^^^^^^ string.quoted.double.pikchr
//               ^^^^^               ^^^^^ ^^     ^^^^^^      ^^  keyword.pikchr
//                                            ^^ constant.language.pikchr
//                                                       ^^^^ comment.block.pikchr
//                                                               ^^^^^^^^ constant.language.pikchr

diamond;One: [line ->] with .n at 1cm below previous
// <-------   ^^^^ storage.type.class.pikchr
//     ^ punctuation.separator.delimiter.end.pikchr
//      ^^^ variable.language.pikchr
//         ^ punctuation.separator.pikchr
//           ^ punctuation.bracket.square.begin.pikchr
//                 ^^ entity.name.tag.pikchr
//                   ^ punctuation.bracket.square.end.pikchr
//                     ^^^^    ^^     ^^^^^ keyword.pikchr
//                          ^ punctuation.separator.period.pikchr
//                           ^ constant.language.pikchr
//                                          ^^^^^^^^ constant.language.pikchr
LE2:  box "expr" fit with .w at (4*arrowht+linerad east of LOP3.e,LIKE)
//                                                 ^^^^ support.constant.edge.pikchr
//                                                      ^^ keyword.control.of.pikchr
