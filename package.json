{
    "name": "fossil",
    "publisher": "koog1000",
    "displayName": "Fossil",
    "description": "Integrated Fossil source control",
    "galleryBanner": {
        "color": "#999999",
        "theme": "dark"
    },
    "homepage": "https://github.com/koog1000/vscode-fossil",
    "license": "MIT",
    "repository": {
        "type": "git",
        "url": "https://github.com/koog1000/vscode-fossil.git"
    },
    "bugs": {
        "url": "https://github.com/koog1000/vscode-fossil/issues"
    },
    "version": "0.1.6",
    "engines": {
        "vscode": "^1.36.0"
    },
    "keywords": [
        "fossil-scm",
        "fossil",
        "source",
        "scm"
    ],
    "icon": "icon.png",
    "categories": [
        "SCM Providers",
        "Other"
    ],
    "activationEvents": [
        "*"
    ],
    "main": "./out/main",
    "contributes": {
        "commands": [
            {
                "command": "fossil.add",
                "title": "%command.add%",
                "category": "Fossil",
                "icon": "$(plus)"
            },
            {
                "command": "fossil.addAll",
                "title": "%command.addAll%",
                "category": "Fossil",
                "icon": "$(plus)"
            },
            {
                "command": "fossil.ignore",
                "title": "%command.ignore%",
                "category": "Fossil",
                "icon": "$(discard)"
            },
            {
                "command": "fossil.branch",
                "title": "%command.branch%",
                "category": "Fossil"
            },
            {
                "command": "fossil.clean",
                "title": "%command.clean%",
                "category": "Fossil"
            },
            {
                "command": "fossil.revert",
                "title": "%command.revert%",
                "category": "Fossil",
                "icon": "$(discard)"
            },
            {
                "command": "fossil.revertAll",
                "title": "%command.revertAll%",
                "category": "Fossil",
                "icon": "$(discard)"
            },
            {
                "command": "fossil.commit",
                "title": "%command.commit%",
                "category": "Fossil",
                "icon": "$(check)"
            },
            {
                "command": "fossil.deleteFiles",
                "title": "Delete All Untracked Files",
                "category": "Fossil",
                "icon": "$(trash)"
            },
            {
                "command": "fossil.deleteFile",
                "title": "Delete Untracked File",
                "category": "Fossil",
                "icon": "$(trash)"
            },
            {
                "command": "fossil.commitAll",
                "title": "%command.commitAll%",
                "category": "Fossil"
            },
            {
                "command": "fossil.commitStaged",
                "title": "%command.commitStaged%",
                "category": "Fossil"
            },
            {
                "command": "fossil.commitBranch",
                "title": "%command.commitBranch%",
                "category": "Fossil"
            },
            {
                "command": "fossil.clone",
                "title": "%command.clone%",
                "category": "Fossil"
            },
            {
                "command": "fossil.fileLog",
                "title": "%command.fileLog%",
                "category": "Fossil"
            },
            {
                "command": "fossil.remove",
                "title": "%command.forget%",
                "category": "Fossil"
            },
            {
                "command": "fossil.init",
                "title": "%command.init%",
                "category": "Fossil",
                "icon": {
                    "light": "icon.png",
                    "dark": "icon.png"
                }
            },
            {
                "command": "fossil.open",
                "title": "%command.open%",
                "category": "Fossil",
                "icon": {
                    "light": "icon.png",
                    "dark": "icon.png"
                }
            },
            {
                "command": "fossil.close",
                "title": "%command.close%",
                "category": "Fossil"
            },
            {
                "command": "fossil.log",
                "title": "%command.log%",
                "category": "Fossil"
            },
            {
                "command": "fossil.markResolved",
                "title": "%command.markResolved%",
                "category": "Fossil",
                "icon": "$(check)"
            },
            {
                "command": "fossil.openChange",
                "title": "%command.openChange%",
                "category": "Fossil",
                "icon": {
                    "light": "resources/icons/light/open-change.svg",
                    "dark": "resources/icons/dark/open-change.svg"
                }
            },
            {
                "command": "fossil.openChangeFromUri",
                "title": "%command.openChange%",
                "category": "Fossil",
                "icon": {
                    "light": "resources/icons/light/open-change.svg",
                    "dark": "resources/icons/dark/open-change.svg"
                }
            },
            {
                "command": "fossil.openFile",
                "title": "%command.openFile%",
                "category": "Fossil",
                "icon": {
                    "light": "resources/icons/light/open-file.svg",
                    "dark": "resources/icons/dark/open-file.svg"
                }
            },
            {
                "command": "fossil.openFiles",
                "title": "%command.openFiles%",
                "category": "Fossil"
            },
            {
                "command": "fossil.openFileFromUri",
                "title": "%command.openFile%",
                "category": "Fossil",
                "icon": {
                    "light": "resources/icons/light/open-file.svg",
                    "dark": "resources/icons/dark/open-file.svg"
                }
            },
            {
                "command": "fossil.openui",
                "title": "%command.openui%",
                "category": "Fossil"
            },
            {
                "command": "fossil.pull",
                "title": "%command.pull%",
                "category": "Fossil"
            },
            {
                "command": "fossil.push",
                "title": "%command.push%",
                "category": "Fossil"
            },
            {
                "command": "fossil.pushTo",
                "title": "%command.pushTo%",
                "category": "Fossil"
            },
            {
                "command": "fossil.refresh",
                "title": "%command.refresh%",
                "category": "Fossil",
                "icon": "$(refresh)"
            },
            {
                "command": "fossil.resolveAgain",
                "title": "%command.resolveAgain%",
                "category": "Fossil",
                "icon": "$(refresh)"
            },
            {
                "command": "fossil.showOutput",
                "title": "%command.showOutput%",
                "category": "Fossil"
            },
            {
                "command": "fossil.stage",
                "title": "%command.stage%",
                "category": "Fossil",
                "icon": "$(plus)"
            },
            {
                "command": "fossil.stageAll",
                "title": "%command.stageAll%",
                "category": "Fossil",
                "icon": "$(plus)"
            },
            {
                "command": "fossil.undo",
                "title": "%command.undo%",
                "category": "Fossil"
            },
            {
                "command": "fossil.unresolve",
                "title": "%command.unresolve%",
                "category": "Fossil"
            },
            {
                "command": "fossil.unstage",
                "title": "%command.unstage%",
                "category": "Fossil",
                "icon": "$(remove)"
            },
            {
                "command": "fossil.unstageAll",
                "title": "%command.unstageAll%",
                "category": "Fossil",
                "icon": "$(remove)"
            },
            {
                "command": "fossil.update",
                "title": "%command.update%",
                "category": "Fossil"
            },
            {
                "command": "fossil.revertChange",
                "title": "Revert Change",
                "category": "Fossil",
                "icon": "$(discard)"
            },
            {
                "command": "fossil.merge",
                "title": "%command.merge%",
                "category": "Fossil"
            },
            {
                "command": "fossil.integrate",
                "title": "%command.integrate%",
                "category": "Fossil"
            },
            {
                "command": "fossil.cherrypick",
                "title": "%command.cherrypick%",
                "category": "Fossil"
            },
            {
                "command": "fossil.patchCreate",
                "title": "Create Patch",
                "category": "Fossil"
            },
            {
                "command": "fossil.patchApply",
                "title": "Apply Patch",
                "category": "Fossil"
            }
        ],
        "menus": {
            "commandPalette": [
                {
                    "command": "fossil.clone",
                    "when": "config.fossil.enabled"
                },
                {
                    "command": "fossil.init",
                    "when": "config.fossil.enabled"
                },
                {
                    "command": "fossil.openui",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.refresh",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.openChange",
                    "when": "false"
                },
                {
                    "command": "fossil.openFile",
                    "when": "false"
                },
                {
                    "command": "fossil.openFiles",
                    "when": "false"
                },
                {
                    "command": "fossil.openChangeFromUri",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.openFileFromUri",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.stage",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.stageAll",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.unstage",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.unstageAll",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.revert",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.revertAll",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.commit",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.commitStaged",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.commitAll",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.commitBranch",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.undo",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.update",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.branch",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.pull",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.push",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.pushTo",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.merge",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.integrate",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.cherrypick",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.showOutput",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.fileLog",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                },
                {
                    "command": "fossil.log",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0"
                }
            ],
            "scm/title": [
                {
                    "command": "fossil.init",
                    "group": "navigation",
                    "when": "config.fossil.enabled && !scmProvider && fossilOpenRepositoryCount == 0"
                },
                {
                    "command": "fossil.open",
                    "group": "0_open",
                    "when": "config.fossil.enabled && !scmProvider && fossilOpenRepositoryCount == 0"
                },
                {
                    "command": "fossil.clone",
                    "when": "config.fossil.enabled",
                    "group": "0_open"
                },
                {
                    "command": "fossil.commit",
                    "group": "navigation",
                    "when": "config.fossil.enabled && scmProvider == fossil"
                },
                {
                    "command": "fossil.refresh",
                    "group": "navigation",
                    "when": "config.fossil.enabled && scmProvider == fossil"
                },
                {
                    "command": "fossil.pull",
                    "group": "1_sync",
                    "when": "config.fossil.enabled && scmProvider == fossil"
                },
                {
                    "command": "fossil.push",
                    "group": "1_sync",
                    "when": "config.fossil.enabled && scmProvider == fossil"
                },
                {
                    "command": "fossil.pushTo",
                    "group": "1_sync",
                    "when": "config.fossil.enabled && scmProvider == fossil"
                },
                {
                    "command": "fossil.undo",
                    "group": "3_commit",
                    "when": "config.fossil.enabled && scmProvider == fossil"
                },
                {
                    "command": "fossil.unstageAll",
                    "group": "4_stage",
                    "when": "config.fossil.enabled && scmProvider == fossil"
                },
                {
                    "command": "fossil.revertAll",
                    "group": "4_stage",
                    "when": "config.fossil.enabled && scmProvider == fossil"
                },
                {
                    "command": "fossil.clean",
                    "group": "4_stage",
                    "when": "config.fossil.enabled && scmProvider == fossil"
                },
                {
                    "submenu": "fossil.commit",
                    "when": "scmProvider == fossil",
                    "group": "5_groups@0"
                },
                {
                    "submenu": "fossil.merge",
                    "when": "scmProvider == fossil",
                    "group": "5_groups@1"
                },
                {
                    "submenu": "fossil.timeline",
                    "when": "scmProvider == fossil",
                    "group": "5_groups@2"
                },
                {
                    "submenu": "fossil.patch",
                    "when": "scmProvider == fossil",
                    "group": "5_groups@3"
                },
                {
                    "command": "fossil.showOutput",
                    "group": "6_output",
                    "when": "config.fossil.enabled && scmProvider == fossil"
                }
            ],
            "fossil.commit": [
                {
                    "command": "fossil.commitStaged",
                    "group": "commit@0",
                    "when": "config.fossil.enabled && scmProvider == fossil"
                },
                {
                    "command": "fossil.commitAll",
                    "group": "commit@1",
                    "when": "config.fossil.enabled && scmProvider == fossil"
                },
                {
                    "command": "fossil.commitBranch",
                    "group": "commit@2",
                    "when": "config.fossil.enabled && scmProvider == fossil"
                }
            ],
            "fossil.merge": [
                {
                    "command": "fossil.merge",
                    "when": "scmProvider == fossil",
                    "group": "merge@0"
                },
                {
                    "command": "fossil.integrate",
                    "when": "scmProvider == fossil",
                    "group": "merge@1"
                },
                {
                    "command": "fossil.cherrypick",
                    "when": "scmProvider == fossil",
                    "group": "merge@2"
                }
            ],
            "fossil.timeline": [
                {
                    "command": "fossil.log",
                    "when": "scmProvider == fossil",
                    "group": "log@0"
                },
                {
                    "command": "fossil.fileLog",
                    "when": "scmProvider == fossil",
                    "group": "log@1"
                }
            ],
            "fossil.patch": [
                {
                    "command": "fossil.patchCreate",
                    "when": "scmProvider == fossil",
                    "group": "patch@0"
                },
                {
                    "command": "fossil.patchApply",
                    "when": "scmProvider == fossil",
                    "group": "patch@1"
                }
            ],
            "scm/change/title": [
                {
                    "command": "fossil.revertChange",
                    "when": "config.fossil.enabled && scmProvider == fossil"
                }
            ],
            "scm/sourceControl": [
                {
                    "command": "fossil.close",
                    "group": "navigation",
                    "when": "config.fossil.enabled && scmProvider == fossil"
                }
            ],
            "scm/resourceGroup/context": [
                {
                    "command": "fossil.unstageAll",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == staging",
                    "group": "1_modification"
                },
                {
                    "command": "fossil.unstageAll",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == staging",
                    "group": "inline"
                },
                {
                    "command": "fossil.revertAll",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == working",
                    "group": "1_modification"
                },
                {
                    "command": "fossil.stageAll",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == working",
                    "group": "1_modification"
                },
                {
                    "command": "fossil.stageAll",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == working",
                    "group": "inline"
                },
                {
                    "command": "fossil.revertAll",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == working",
                    "group": "inline"
                },
                {
                    "command": "fossil.addAll",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == untracked",
                    "group": "1_modification"
                },
                {
                    "command": "fossil.clean",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == untracked",
                    "group": "1_modification"
                },
                {
                    "command": "fossil.deleteFiles",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == untracked",
                    "group": "inline@0"
                },
                {
                    "command": "fossil.addAll",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == untracked",
                    "group": "inline@1"
                },
                {
                    "command": "fossil.openFiles",
                    "when": "config.fossil.enabled && scmProvider == fossil",
                    "group": "navigation"
                },
                {
                    "command": "fossil.openChange",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup != untracked",
                    "group": "navigation"
                }
            ],
            "scm/resourceState/context": [
                {
                    "command": "fossil.unresolve",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == merge",
                    "group": "1_modification"
                },
                {
                    "command": "fossil.openChange",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == staging",
                    "group": "navigation"
                },
                {
                    "command": "fossil.unstage",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == staging",
                    "group": "1_modification"
                },
                {
                    "command": "fossil.unstage",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == staging",
                    "group": "inline"
                },
                {
                    "command": "fossil.openChange",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == working",
                    "group": "navigation"
                },
                {
                    "command": "fossil.stage",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == working",
                    "group": "1_modification"
                },
                {
                    "command": "fossil.revert",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup != untracked",
                    "group": "1_modification"
                },
                {
                    "command": "fossil.revert",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup != untracked",
                    "group": "inline@0"
                },
                {
                    "command": "fossil.stage",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == working",
                    "group": "inline"
                },
                {
                    "command": "fossil.deleteFile",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == untracked",
                    "group": "inline@0"
                },
                {
                    "command": "fossil.add",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == untracked",
                    "group": "inline@1"
                },
                {
                    "command": "fossil.stage",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == untracked",
                    "group": "1_modification"
                },
                {
                    "command": "fossil.ignore",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == untracked",
                    "group": "1_modification"
                },
                {
                    "command": "fossil.openFiles",
                    "when": "config.fossil.enabled && scmProvider == fossil",
                    "group": "navigation"
                },
                {
                    "command": "fossil.remove",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == working",
                    "group": "2_modification"
                }
            ],
            "scm/resourceFolder/context": [
                {
                    "command": "fossil.unstage",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == staging",
                    "group": "1_modification"
                },
                {
                    "command": "fossil.unstage",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == staging",
                    "group": "inline"
                },
                {
                    "command": "fossil.revert",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == working",
                    "group": "1_modification"
                },
                {
                    "command": "fossil.stage",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == working",
                    "group": "1_modification"
                },
                {
                    "command": "fossil.stage",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == working",
                    "group": "inline"
                },
                {
                    "command": "fossil.revert",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == working",
                    "group": "inline"
                },
                {
                    "command": "fossil.add",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == untracked",
                    "group": "1_modification"
                },
                {
                    "command": "fossil.clean",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == untracked",
                    "group": "1_modification"
                },
                {
                    "command": "fossil.add",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup == untracked",
                    "group": "inline"
                },
                {
                    "command": "fossil.openFiles",
                    "when": "config.fossil.enabled && scmProvider == fossil",
                    "group": "navigation"
                },
                {
                    "command": "fossil.openChange",
                    "when": "config.fossil.enabled && scmProvider == fossil && scmResourceGroup != untracked",
                    "group": "navigation"
                }
            ],
            "editor/title": [
                {
                    "command": "fossil.openFileFromUri",
                    "group": "navigation",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme != extension && scmProvider == fossil"
                },
                {
                    "command": "fossil.openChangeFromUri",
                    "group": "navigation",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0 && !isInDiffEditor && resourceScheme == file && scmProvider == fossil"
                },
                {
                    "command": "fossil.fileLog",
                    "when": "config.fossil.enabled && fossilOpenRepositoryCount != 0 && !isInDiffEditor"
                }
            ]
        },
        "submenus": [
            {
                "id": "fossil.merge",
                "label": "%submenu.merge%"
            },
            {
                "id": "fossil.timeline",
                "label": "%submenu.timeline%"
            },
            {
                "id": "fossil.patch",
                "label": "%submenu.patch%"
            },
            {
                "id": "fossil.commit",
                "label": "%submenu.commit%"
            }
        ],
        "configuration": {
            "title": "Fossil",
            "properties": {
                "fossil.enabled": {
                    "type": "boolean",
                    "description": "%config.enabled%",
                    "default": true
                },
                "fossil.autoInOutInterval": {
                    "type": "number",
                    "description": "%config.autoInOutInterval%",
                    "default": 180
                },
                "fossil.autoRefresh": {
                    "type": "boolean",
                    "description": "%config.autoRefresh%",
                    "default": true
                },
                "fossil.autoUpdate": {
                    "type": "boolean",
                    "description": "%config.autoUpdate%",
                    "default": true
                },
                "fossil.path": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "%config.path%",
                    "default": null,
                    "isExecutable": true
                },
                "fossil.username": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "%config.username%",
                    "default": null
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run esbuild-base -- --minify",
        "compile": "tsc -p ./",
        "package": "vsce package",
        "deploy": "vsce publish",
        "pretest": "npm run compile",
        "test": "node ./out/test/runTest.js",
        "lint": "eslint ./src --ext .ts",
        "lint:fix": "eslint --fix ./src --ext .ts",
        "esbuild-base": "esbuild ./src/main.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node",
        "esbuild": "npm run esbuild-base -- --sourcemap"
    },
    "dependencies": {
        "nyc": "^15.1.0",
        "vscode-nls": "^5.0.1"
    },
    "devDependencies": {
        "@microsoft/eslint-formatter-sarif": "^3.0.0",
        "@types/glob": "^7.2.0",
        "@types/mocha": "^9.1.1",
        "@types/node": "^16.11.7",
        "@types/sinon": "^10.0.11",
        "@types/vscode": "^1.36.0",
        "@typescript-eslint/eslint-plugin": "^5.27.1",
        "@typescript-eslint/parser": "^5.27.1",
        "@vscode/test-electron": "^1.6.1",
        "esbuild": "^0.14.45",
        "eslint": "^8.17.0",
        "eslint-config-standard": "^17.0.0",
        "eslint-plugin-import": "^2.26.0",
        "eslint-plugin-n": "^15.2.2",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^6.0.0",
        "mocha": "^10.0.0",
        "prettier": "^2.6.2",
        "sinon": "^14.0.0"
    },
    "__metadata": {
        "id": "e828bfe6-95e7-4c7a-a334-ae2cc5ba8788",
        "publisherDisplayName": "koog1000",
        "publisherId": "8e4cabe1-5c1f-4bf5-bbf3-8bb8d5de842c"
    }
}
